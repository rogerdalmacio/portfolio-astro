---
import NavContent from "./NavContent.astro";
---
<div class="sticky top-0 md:static text-text/80 border-b border-gray-300">
    <nav class="hidden md:flex default-container default-padding py-5 md:py-10">
        <NavContent />
    </nav>
    <div class="md:hidden">
        <div class="default-container default-padding py-4 relative flex justify-between items-center">
            <p class="font-rubik tracking-widest p-3 text-off-white bg-[url(/brush.svg)] bg-center bg-cover bg-no-repeat">Roger Dalmacio</p>
            <button
                id="menu-btn"
                aria-label="open-menu"
                aria-expanded="false"
                aria-controls="mobile-menu"
                class="relative flex flex-col items-center gap-1 cursor-pointer border border-text/50 px-1.5 py-2 rounded hover:bg-gray-100"
            >
                <span class="w-5 h-[1.5px] bg-text/80"></span>
                <span class="w-5 h-[1.5px] bg-text/80"></span>
            </button>
        </div>
        <nav id="mobile-menu" style="height: 0" class="w-full overflow-hidden transition-all duration-300">
            <NavContent />
        </nav>
    </div>
</div>

<script client:visible>
    const menuBtn = document.querySelector('#menu-btn');
    const mobileMenu = document.querySelector('#mobile-menu');

    menuBtn.addEventListener('click', () => {
        if (menuBtn?.getAttribute('aria-expanded') === "false") {
            menuBtn?.setAttribute('aria-label', "close-menu")
            menuBtn?.setAttribute('aria-expanded', "true");
            mobileMenu.style.height = mobileMenu.scrollHeight + "px";
            // Optional: reset to auto after transition for flexible content
            mobileMenu.addEventListener('transitionend', function handler() {
            mobileMenu.style.height = "auto";
            mobileMenu.removeEventListener('transitionend', handler);
            });
        } else {
            menuBtn?.setAttribute('aria-label', "open-menu")
            menuBtn?.setAttribute('aria-expanded', "false");
            mobileMenu.style.height = mobileMenu.scrollHeight + "px"; // set current height for smooth transition
            requestAnimationFrame(() => {
                mobileMenu.style.height = "0px";
            });
        }
    })
</script>